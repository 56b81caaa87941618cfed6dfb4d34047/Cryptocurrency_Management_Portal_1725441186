{
    "id": "contact_form_1725605000",
    "name": "contact-form",
    "type": "containerComponent",
    "metadata": {
        "markdownText": "\n<template>\n<div class=\"container mx-auto p-8 bg-opacity-20 bg-white backdrop-filter backdrop-blur-lg rounded-xl shadow-lg max-w-md\">\n<h1 class=\"text-3xl font-bold mb-6 text-green-400\">Wrap ETH to WETH</h1>\n<div class=\"mb-4\">\n<label class=\"block text-sm font-medium text-green-300 mb-2\" for=\"ethAmount\">Amount of ETH to wrap</label>\n<input class=\"w-full px-3 py-2 bg-opacity-20 bg-white backdrop-filter backdrop-blur-sm rounded-md border border-green-400 focus:outline-none focus:ring-2 focus:ring-green-500 text-green-100\" id=\"ethAmount\" min=\"0\" placeholder=\"Enter ETH amount\" step=\"0.01\" type=\"number\" v-model=\"ethAmount\"/>\n</div>\n<button @click=\"wrapEth\" class=\"w-full bg-green-500 hover:bg-green-600 text-white font-bold py-2 px-4 rounded-md transition duration-300 ease-in-out transform hover:scale-105 focus:outline-none focus:ring-2 focus:ring-green-500 focus:ring-opacity-50\">\n      Wrap ETH\n    </button>\n<div class=\"mt-6 p-4 bg-opacity-30 bg-green-900 rounded-md\">\n<p class=\"text-green-300\">Your WETH Balance: {{ wethBalance }} WETH</p>\n</div>\n</div>\n</template>\n<script>\nimport { ethers } from 'ethers'\n\nexport default {\n  name: 'WrapEthComponent',\n  data() {\n    return {\n      ethAmount: '',\n      wethBalance: '0',\n      contract: null,\n      signer: null,\n      contractAddress: '0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2',\n      chainId: 1,\n      abi: [\n        {\n          \"name\": \"deposit\",\n          \"stateMutability\": \"payable\",\n          \"inputs\": [],\n          \"outputs\": []\n        },\n        {\n          \"name\": \"balanceOf\",\n          \"stateMutability\": \"view\",\n          \"inputs\": [\n            {\n              \"name\": \"account\",\n              \"type\": \"address\"\n            }\n          ],\n          \"outputs\": [\n            {\n              \"name\": \"balance\",\n              \"type\": \"uint256\"\n            }\n          ]\n        }\n      ]\n    }\n  },\n  methods: {\n    async connectWallet() {\n      if (typeof window.ethereum !== 'undefined') {\n        try {\n          await window.ethereum.request({ method: 'eth_requestAccounts' })\n          const provider = new ethers.providers.Web3Provider(window.ethereum)\n          this.signer = provider.getSigner()\n          this.contract = new ethers.Contract(this.contractAddress, this.abi, this.signer)\n          this.updateBalance()\n        } catch (error) {\n          console.error('Failed to connect wallet:', error)\n        }\n      } else {\n        console.error('MetaMask is not installed')\n      }\n    },\n    async checkNetwork() {\n      if (this.signer) {\n        const network = await this.signer.provider.getNetwork()\n        if (network.chainId !== this.chainId) {\n          try {\n            await window.ethereum.request({\n              method: 'wallet_switchEthereumChain',\n              params: [{ chainId: ethers.utils.hexValue(this.chainId) }],\n            })\n          } catch (error) {\n            console.error('Failed to switch network:', error)\n          }\n        }\n      }\n    },\n    async wrapEth() {\n      if (!this.signer) {\n        await this.connectWallet()\n      }\n      await this.checkNetwork()\n\n      if (this.contract && this.ethAmount) {\n        try {\n          const tx = await this.contract.deposit({\n            value: ethers.utils.parseEther(this.ethAmount)\n          })\n          await tx.wait()\n          this.updateBalance()\n          this.ethAmount = ''\n        } catch (error) {\n          console.error('Error wrapping ETH:', error)\n        }\n      }\n    },\n    async updateBalance() {\n      if (this.contract && this.signer) {\n        try {\n          const address = await this.signer.getAddress()\n          const balance = await this.contract.balanceOf(address)\n          this.wethBalance = ethers.utils.formatEther(balance)\n        } catch (error) {\n          console.error('Error fetching WETH balance:', error)\n        }\n      }\n    }\n  },\n  mounted() {\n    this.connectWallet()\n  }\n}\n</script>\n"
    },
    "w": 7,
    "h": 11,
    "x": 5,
    "y": 0,
    "i": "5",
    "minW": 3,
    "maxW": 12,
    "minH": 1,
    "moved": false,
    "static": false,
    "isDraggable": true,
    "isResizable": true
}